//
// File generated by rootcint at Tue Jul  7 12:28:20 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIsrcdIWCSimRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "WCSimRootDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void WCSimRootTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootTrack(void *p = 0);
   static void *newArray_WCSimRootTrack(Long_t size, void *p);
   static void delete_WCSimRootTrack(void *p);
   static void deleteArray_WCSimRootTrack(void *p);
   static void destruct_WCSimRootTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootTrack*)
   {
      ::WCSimRootTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootTrack", ::WCSimRootTrack::Class_Version(), "./include/WCSimRootEvent.hh", 23,
                  typeid(::WCSimRootTrack), DefineBehavior(ptr, ptr),
                  &::WCSimRootTrack::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootTrack) );
      instance.SetNew(&new_WCSimRootTrack);
      instance.SetNewArray(&newArray_WCSimRootTrack);
      instance.SetDelete(&delete_WCSimRootTrack);
      instance.SetDeleteArray(&deleteArray_WCSimRootTrack);
      instance.SetDestructor(&destruct_WCSimRootTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootTrack*)
   {
      return GenerateInitInstanceLocal((::WCSimRootTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootCherenkovHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootCherenkovHit(void *p = 0);
   static void *newArray_WCSimRootCherenkovHit(Long_t size, void *p);
   static void delete_WCSimRootCherenkovHit(void *p);
   static void deleteArray_WCSimRootCherenkovHit(void *p);
   static void destruct_WCSimRootCherenkovHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootCherenkovHit*)
   {
      ::WCSimRootCherenkovHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootCherenkovHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootCherenkovHit", ::WCSimRootCherenkovHit::Class_Version(), "./include/WCSimRootEvent.hh", 83,
                  typeid(::WCSimRootCherenkovHit), DefineBehavior(ptr, ptr),
                  &::WCSimRootCherenkovHit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootCherenkovHit) );
      instance.SetNew(&new_WCSimRootCherenkovHit);
      instance.SetNewArray(&newArray_WCSimRootCherenkovHit);
      instance.SetDelete(&delete_WCSimRootCherenkovHit);
      instance.SetDeleteArray(&deleteArray_WCSimRootCherenkovHit);
      instance.SetDestructor(&destruct_WCSimRootCherenkovHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootCherenkovHit*)
   {
      return GenerateInitInstanceLocal((::WCSimRootCherenkovHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootCherenkovHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootCherenkovHitTime_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootCherenkovHitTime(void *p = 0);
   static void *newArray_WCSimRootCherenkovHitTime(Long_t size, void *p);
   static void delete_WCSimRootCherenkovHitTime(void *p);
   static void deleteArray_WCSimRootCherenkovHitTime(void *p);
   static void destruct_WCSimRootCherenkovHitTime(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootCherenkovHitTime*)
   {
      ::WCSimRootCherenkovHitTime *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootCherenkovHitTime >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootCherenkovHitTime", ::WCSimRootCherenkovHitTime::Class_Version(), "./include/WCSimRootEvent.hh", 102,
                  typeid(::WCSimRootCherenkovHitTime), DefineBehavior(ptr, ptr),
                  &::WCSimRootCherenkovHitTime::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootCherenkovHitTime) );
      instance.SetNew(&new_WCSimRootCherenkovHitTime);
      instance.SetNewArray(&newArray_WCSimRootCherenkovHitTime);
      instance.SetDelete(&delete_WCSimRootCherenkovHitTime);
      instance.SetDeleteArray(&deleteArray_WCSimRootCherenkovHitTime);
      instance.SetDestructor(&destruct_WCSimRootCherenkovHitTime);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootCherenkovHitTime*)
   {
      return GenerateInitInstanceLocal((::WCSimRootCherenkovHitTime*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootCherenkovHitTime*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootCherenkovDigiHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootCherenkovDigiHit(void *p = 0);
   static void *newArray_WCSimRootCherenkovDigiHit(Long_t size, void *p);
   static void delete_WCSimRootCherenkovDigiHit(void *p);
   static void deleteArray_WCSimRootCherenkovDigiHit(void *p);
   static void destruct_WCSimRootCherenkovDigiHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootCherenkovDigiHit*)
   {
      ::WCSimRootCherenkovDigiHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootCherenkovDigiHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootCherenkovDigiHit", ::WCSimRootCherenkovDigiHit::Class_Version(), "./include/WCSimRootEvent.hh", 125,
                  typeid(::WCSimRootCherenkovDigiHit), DefineBehavior(ptr, ptr),
                  &::WCSimRootCherenkovDigiHit::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootCherenkovDigiHit) );
      instance.SetNew(&new_WCSimRootCherenkovDigiHit);
      instance.SetNewArray(&newArray_WCSimRootCherenkovDigiHit);
      instance.SetDelete(&delete_WCSimRootCherenkovDigiHit);
      instance.SetDeleteArray(&deleteArray_WCSimRootCherenkovDigiHit);
      instance.SetDestructor(&destruct_WCSimRootCherenkovDigiHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootCherenkovDigiHit*)
   {
      return GenerateInitInstanceLocal((::WCSimRootCherenkovDigiHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootCherenkovDigiHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootEventHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootEventHeader(void *p = 0);
   static void *newArray_WCSimRootEventHeader(Long_t size, void *p);
   static void delete_WCSimRootEventHeader(void *p);
   static void deleteArray_WCSimRootEventHeader(void *p);
   static void destruct_WCSimRootEventHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootEventHeader*)
   {
      ::WCSimRootEventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootEventHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootEventHeader", ::WCSimRootEventHeader::Class_Version(), "./include/WCSimRootEvent.hh", 149,
                  typeid(::WCSimRootEventHeader), DefineBehavior(ptr, ptr),
                  &::WCSimRootEventHeader::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootEventHeader) );
      instance.SetNew(&new_WCSimRootEventHeader);
      instance.SetNewArray(&newArray_WCSimRootEventHeader);
      instance.SetDelete(&delete_WCSimRootEventHeader);
      instance.SetDeleteArray(&deleteArray_WCSimRootEventHeader);
      instance.SetDestructor(&destruct_WCSimRootEventHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootEventHeader*)
   {
      return GenerateInitInstanceLocal((::WCSimRootEventHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootEventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootPi0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootPi0(void *p = 0);
   static void *newArray_WCSimRootPi0(Long_t size, void *p);
   static void delete_WCSimRootPi0(void *p);
   static void deleteArray_WCSimRootPi0(void *p);
   static void destruct_WCSimRootPi0(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootPi0*)
   {
      ::WCSimRootPi0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootPi0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootPi0", ::WCSimRootPi0::Class_Version(), "./include/WCSimRootEvent.hh", 173,
                  typeid(::WCSimRootPi0), DefineBehavior(ptr, ptr),
                  &::WCSimRootPi0::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootPi0) );
      instance.SetNew(&new_WCSimRootPi0);
      instance.SetNewArray(&newArray_WCSimRootPi0);
      instance.SetDelete(&delete_WCSimRootPi0);
      instance.SetDeleteArray(&deleteArray_WCSimRootPi0);
      instance.SetDestructor(&destruct_WCSimRootPi0);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootPi0*)
   {
      return GenerateInitInstanceLocal((::WCSimRootPi0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootPi0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootTrigger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootTrigger(void *p = 0);
   static void *newArray_WCSimRootTrigger(Long_t size, void *p);
   static void delete_WCSimRootTrigger(void *p);
   static void deleteArray_WCSimRootTrigger(void *p);
   static void destruct_WCSimRootTrigger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootTrigger*)
   {
      ::WCSimRootTrigger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootTrigger >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootTrigger", ::WCSimRootTrigger::Class_Version(), "./include/WCSimRootEvent.hh", 202,
                  typeid(::WCSimRootTrigger), DefineBehavior(ptr, ptr),
                  &::WCSimRootTrigger::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootTrigger) );
      instance.SetNew(&new_WCSimRootTrigger);
      instance.SetNewArray(&newArray_WCSimRootTrigger);
      instance.SetDelete(&delete_WCSimRootTrigger);
      instance.SetDeleteArray(&deleteArray_WCSimRootTrigger);
      instance.SetDestructor(&destruct_WCSimRootTrigger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootTrigger*)
   {
      return GenerateInitInstanceLocal((::WCSimRootTrigger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootTrigger*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootEvent(void *p = 0);
   static void *newArray_WCSimRootEvent(Long_t size, void *p);
   static void delete_WCSimRootEvent(void *p);
   static void deleteArray_WCSimRootEvent(void *p);
   static void destruct_WCSimRootEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootEvent*)
   {
      ::WCSimRootEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootEvent", ::WCSimRootEvent::Class_Version(), "./include/WCSimRootEvent.hh", 315,
                  typeid(::WCSimRootEvent), DefineBehavior(ptr, ptr),
                  &::WCSimRootEvent::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootEvent) );
      instance.SetNew(&new_WCSimRootEvent);
      instance.SetNewArray(&newArray_WCSimRootEvent);
      instance.SetDelete(&delete_WCSimRootEvent);
      instance.SetDeleteArray(&deleteArray_WCSimRootEvent);
      instance.SetDestructor(&destruct_WCSimRootEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootEvent*)
   {
      return GenerateInitInstanceLocal((::WCSimRootEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootPMT(void *p = 0);
   static void *newArray_WCSimRootPMT(Long_t size, void *p);
   static void delete_WCSimRootPMT(void *p);
   static void deleteArray_WCSimRootPMT(void *p);
   static void destruct_WCSimRootPMT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootPMT*)
   {
      ::WCSimRootPMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootPMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootPMT", ::WCSimRootPMT::Class_Version(), "./include/WCSimRootGeom.hh", 20,
                  typeid(::WCSimRootPMT), DefineBehavior(ptr, ptr),
                  &::WCSimRootPMT::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootPMT) );
      instance.SetNew(&new_WCSimRootPMT);
      instance.SetNewArray(&newArray_WCSimRootPMT);
      instance.SetDelete(&delete_WCSimRootPMT);
      instance.SetDeleteArray(&deleteArray_WCSimRootPMT);
      instance.SetDestructor(&destruct_WCSimRootPMT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootPMT*)
   {
      return GenerateInitInstanceLocal((::WCSimRootPMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootPMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimRootGeom_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimRootGeom(void *p = 0);
   static void *newArray_WCSimRootGeom(Long_t size, void *p);
   static void delete_WCSimRootGeom(void *p);
   static void deleteArray_WCSimRootGeom(void *p);
   static void destruct_WCSimRootGeom(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimRootGeom*)
   {
      ::WCSimRootGeom *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimRootGeom >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimRootGeom", ::WCSimRootGeom::Class_Version(), "./include/WCSimRootGeom.hh", 49,
                  typeid(::WCSimRootGeom), DefineBehavior(ptr, ptr),
                  &::WCSimRootGeom::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimRootGeom) );
      instance.SetNew(&new_WCSimRootGeom);
      instance.SetNewArray(&newArray_WCSimRootGeom);
      instance.SetDelete(&delete_WCSimRootGeom);
      instance.SetDeleteArray(&deleteArray_WCSimRootGeom);
      instance.SetDestructor(&destruct_WCSimRootGeom);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimRootGeom*)
   {
      return GenerateInitInstanceLocal((::WCSimRootGeom*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimRootGeom*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCSimPmtInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCSimPmtInfo(void *p = 0);
   static void *newArray_WCSimPmtInfo(Long_t size, void *p);
   static void delete_WCSimPmtInfo(void *p);
   static void deleteArray_WCSimPmtInfo(void *p);
   static void destruct_WCSimPmtInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCSimPmtInfo*)
   {
      ::WCSimPmtInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCSimPmtInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCSimPmtInfo", ::WCSimPmtInfo::Class_Version(), "./include/WCSimPmtInfo.hh", 14,
                  typeid(::WCSimPmtInfo), DefineBehavior(ptr, ptr),
                  &::WCSimPmtInfo::Dictionary, isa_proxy, 4,
                  sizeof(::WCSimPmtInfo) );
      instance.SetNew(&new_WCSimPmtInfo);
      instance.SetNewArray(&newArray_WCSimPmtInfo);
      instance.SetDelete(&delete_WCSimPmtInfo);
      instance.SetDeleteArray(&deleteArray_WCSimPmtInfo);
      instance.SetDestructor(&destruct_WCSimPmtInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCSimPmtInfo*)
   {
      return GenerateInitInstanceLocal((::WCSimPmtInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCSimPmtInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *WCSimRootTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootTrack::Class_Name()
{
   return "WCSimRootTrack";
}

//______________________________________________________________________________
const char *WCSimRootTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootCherenkovHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootCherenkovHit::Class_Name()
{
   return "WCSimRootCherenkovHit";
}

//______________________________________________________________________________
const char *WCSimRootCherenkovHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootCherenkovHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootCherenkovHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootCherenkovHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootCherenkovHitTime::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootCherenkovHitTime::Class_Name()
{
   return "WCSimRootCherenkovHitTime";
}

//______________________________________________________________________________
const char *WCSimRootCherenkovHitTime::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHitTime*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootCherenkovHitTime::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHitTime*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootCherenkovHitTime::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHitTime*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootCherenkovHitTime::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovHitTime*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootCherenkovDigiHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootCherenkovDigiHit::Class_Name()
{
   return "WCSimRootCherenkovDigiHit";
}

//______________________________________________________________________________
const char *WCSimRootCherenkovDigiHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovDigiHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootCherenkovDigiHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovDigiHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootCherenkovDigiHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovDigiHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootCherenkovDigiHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootCherenkovDigiHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootEventHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootEventHeader::Class_Name()
{
   return "WCSimRootEventHeader";
}

//______________________________________________________________________________
const char *WCSimRootEventHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEventHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootEventHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEventHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootEventHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEventHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootEventHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEventHeader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootPi0::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootPi0::Class_Name()
{
   return "WCSimRootPi0";
}

//______________________________________________________________________________
const char *WCSimRootPi0::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPi0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootPi0::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPi0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootPi0::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPi0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootPi0::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPi0*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootTrigger::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootTrigger::Class_Name()
{
   return "WCSimRootTrigger";
}

//______________________________________________________________________________
const char *WCSimRootTrigger::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrigger*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootTrigger::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrigger*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootTrigger::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrigger*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootTrigger::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootTrigger*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootEvent::Class_Name()
{
   return "WCSimRootEvent";
}

//______________________________________________________________________________
const char *WCSimRootEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootPMT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootPMT::Class_Name()
{
   return "WCSimRootPMT";
}

//______________________________________________________________________________
const char *WCSimRootPMT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootPMT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootPMT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootPMT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootPMT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimRootGeom::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimRootGeom::Class_Name()
{
   return "WCSimRootGeom";
}

//______________________________________________________________________________
const char *WCSimRootGeom::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootGeom*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimRootGeom::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootGeom*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimRootGeom::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootGeom*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimRootGeom::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimRootGeom*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCSimPmtInfo::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCSimPmtInfo::Class_Name()
{
   return "WCSimPmtInfo";
}

//______________________________________________________________________________
const char *WCSimPmtInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimPmtInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCSimPmtInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCSimPmtInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCSimPmtInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimPmtInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCSimPmtInfo::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCSimPmtInfo*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void WCSimRootCherenkovDigiHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootCherenkovDigiHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootCherenkovDigiHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootCherenkovDigiHit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootCherenkovDigiHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootCherenkovDigiHit.
      TClass *R__cl = ::WCSimRootCherenkovDigiHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQ", &fQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT", &fT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTubeId", &fTubeId);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootCherenkovDigiHit(void *p) {
      return  p ? new(p) ::WCSimRootCherenkovDigiHit : new ::WCSimRootCherenkovDigiHit;
   }
   static void *newArray_WCSimRootCherenkovDigiHit(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootCherenkovDigiHit[nElements] : new ::WCSimRootCherenkovDigiHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootCherenkovDigiHit(void *p) {
      delete ((::WCSimRootCherenkovDigiHit*)p);
   }
   static void deleteArray_WCSimRootCherenkovDigiHit(void *p) {
      delete [] ((::WCSimRootCherenkovDigiHit*)p);
   }
   static void destruct_WCSimRootCherenkovDigiHit(void *p) {
      typedef ::WCSimRootCherenkovDigiHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootCherenkovDigiHit

//______________________________________________________________________________
void WCSimRootCherenkovHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootCherenkovHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootCherenkovHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootCherenkovHit::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootCherenkovHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootCherenkovHit.
      TClass *R__cl = ::WCSimRootCherenkovHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTubeID", &fTubeID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalPe[2]", fTotalPe);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootCherenkovHit(void *p) {
      return  p ? new(p) ::WCSimRootCherenkovHit : new ::WCSimRootCherenkovHit;
   }
   static void *newArray_WCSimRootCherenkovHit(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootCherenkovHit[nElements] : new ::WCSimRootCherenkovHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootCherenkovHit(void *p) {
      delete ((::WCSimRootCherenkovHit*)p);
   }
   static void deleteArray_WCSimRootCherenkovHit(void *p) {
      delete [] ((::WCSimRootCherenkovHit*)p);
   }
   static void destruct_WCSimRootCherenkovHit(void *p) {
      typedef ::WCSimRootCherenkovHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootCherenkovHit

//______________________________________________________________________________
void WCSimRootCherenkovHitTime::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootCherenkovHitTime.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootCherenkovHitTime::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootCherenkovHitTime::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootCherenkovHitTime::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootCherenkovHitTime.
      TClass *R__cl = ::WCSimRootCherenkovHitTime::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTruetime", &fTruetime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPrimaryParentID", &fPrimaryParentID);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootCherenkovHitTime(void *p) {
      return  p ? new(p) ::WCSimRootCherenkovHitTime : new ::WCSimRootCherenkovHitTime;
   }
   static void *newArray_WCSimRootCherenkovHitTime(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootCherenkovHitTime[nElements] : new ::WCSimRootCherenkovHitTime[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootCherenkovHitTime(void *p) {
      delete ((::WCSimRootCherenkovHitTime*)p);
   }
   static void deleteArray_WCSimRootCherenkovHitTime(void *p) {
      delete [] ((::WCSimRootCherenkovHitTime*)p);
   }
   static void destruct_WCSimRootCherenkovHitTime(void *p) {
      typedef ::WCSimRootCherenkovHitTime current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootCherenkovHitTime

//______________________________________________________________________________
void WCSimRootTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootTrack::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootTrack.
      TClass *R__cl = ::WCSimRootTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIpnu", &fIpnu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlag", &fFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM", &fM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartvol", &fStartvol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStopvol", &fStopvol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir[3]", fDir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdir[3]", fPdir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStop[3]", fStop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart[3]", fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fParenttype", &fParenttype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootTrack(void *p) {
      return  p ? new(p) ::WCSimRootTrack : new ::WCSimRootTrack;
   }
   static void *newArray_WCSimRootTrack(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootTrack[nElements] : new ::WCSimRootTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootTrack(void *p) {
      delete ((::WCSimRootTrack*)p);
   }
   static void deleteArray_WCSimRootTrack(void *p) {
      delete [] ((::WCSimRootTrack*)p);
   }
   static void destruct_WCSimRootTrack(void *p) {
      typedef ::WCSimRootTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootTrack

//______________________________________________________________________________
void WCSimRootEventHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootEventHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootEventHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootEventHeader::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootEventHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootEventHeader.
      TClass *R__cl = ::WCSimRootEventHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtNum", &fEvtNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRun", &fRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDate", &fDate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubEvtNumber", &fSubEvtNumber);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootEventHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WCSimRootEventHeader : new ::WCSimRootEventHeader;
   }
   static void *newArray_WCSimRootEventHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::WCSimRootEventHeader[nElements] : new ::WCSimRootEventHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootEventHeader(void *p) {
      delete ((::WCSimRootEventHeader*)p);
   }
   static void deleteArray_WCSimRootEventHeader(void *p) {
      delete [] ((::WCSimRootEventHeader*)p);
   }
   static void destruct_WCSimRootEventHeader(void *p) {
      typedef ::WCSimRootEventHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootEventHeader

//______________________________________________________________________________
void WCSimRootTrigger::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootTrigger.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootTrigger::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootTrigger::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootTrigger::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootTrigger.
      TClass *R__cl = ::WCSimRootTrigger::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtHdr", &fEvtHdr);
      R__insp.InspectMember(fEvtHdr, "fEvtHdr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMode", &fMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxvol", &fVtxvol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtx[3]", fVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVecRecNumber", &fVecRecNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJmu", &fJmu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fJp", &fJp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0", &fPi0);
      R__insp.InspectMember(fPi0, "fPi0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpar", &fNpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNtrack", &fNtrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracks", &fTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumTubesHit", &fNumTubesHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcherenkovhits", &fNcherenkovhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCherenkovHits", &fCherenkovHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCherenkovHitCounter", &fCherenkovHitCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcherenkovhittimes", &fNcherenkovhittimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCherenkovHitTimes", &fCherenkovHitTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumDigitizedTubes", &fNumDigitizedTubes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcherenkovdigihits", &fNcherenkovdigihits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumQ", &fSumQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCherenkovDigiHits", &fCherenkovDigiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsZombie", &IsZombie);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootTrigger(void *p) {
      return  p ? new(p) ::WCSimRootTrigger : new ::WCSimRootTrigger;
   }
   static void *newArray_WCSimRootTrigger(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootTrigger[nElements] : new ::WCSimRootTrigger[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootTrigger(void *p) {
      delete ((::WCSimRootTrigger*)p);
   }
   static void deleteArray_WCSimRootTrigger(void *p) {
      delete [] ((::WCSimRootTrigger*)p);
   }
   static void destruct_WCSimRootTrigger(void *p) {
      typedef ::WCSimRootTrigger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootTrigger

//______________________________________________________________________________
void WCSimRootEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootEvent::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootEvent.
      TClass *R__cl = ::WCSimRootEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventList", &fEventList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Current", &Current);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootEvent(void *p) {
      return  p ? new(p) ::WCSimRootEvent : new ::WCSimRootEvent;
   }
   static void *newArray_WCSimRootEvent(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootEvent[nElements] : new ::WCSimRootEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootEvent(void *p) {
      delete ((::WCSimRootEvent*)p);
   }
   static void deleteArray_WCSimRootEvent(void *p) {
      delete [] ((::WCSimRootEvent*)p);
   }
   static void destruct_WCSimRootEvent(void *p) {
      typedef ::WCSimRootEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootEvent

//______________________________________________________________________________
void WCSimRootPi0::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootPi0.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootPi0::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootPi0::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootPi0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootPi0.
      TClass *R__cl = ::WCSimRootPi0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0Vtx[3]", fPi0Vtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGammaID[2]", fGammaID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGammaE[2]", fGammaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGammaVtx[2][3]", fGammaVtx);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootPi0(void *p) {
      return  p ? new(p) ::WCSimRootPi0 : new ::WCSimRootPi0;
   }
   static void *newArray_WCSimRootPi0(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootPi0[nElements] : new ::WCSimRootPi0[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootPi0(void *p) {
      delete ((::WCSimRootPi0*)p);
   }
   static void deleteArray_WCSimRootPi0(void *p) {
      delete [] ((::WCSimRootPi0*)p);
   }
   static void destruct_WCSimRootPi0(void *p) {
      typedef ::WCSimRootPi0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootPi0

//______________________________________________________________________________
void WCSimRootGeom::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootGeom.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootGeom::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootGeom::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootGeom::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootGeom.
      TClass *R__cl = ::WCSimRootGeom::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCCylRadius", &fWCCylRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCCylLength", &fWCCylLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fgeo_type", &fgeo_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCPMTRadius", &fWCPMTRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCNumPMT", &fWCNumPMT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWCOffset[3]", fWCOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrientation", &fOrientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPMTArray", &fPMTArray);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootGeom(void *p) {
      return  p ? new(p) ::WCSimRootGeom : new ::WCSimRootGeom;
   }
   static void *newArray_WCSimRootGeom(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootGeom[nElements] : new ::WCSimRootGeom[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootGeom(void *p) {
      delete ((::WCSimRootGeom*)p);
   }
   static void deleteArray_WCSimRootGeom(void *p) {
      delete [] ((::WCSimRootGeom*)p);
   }
   static void destruct_WCSimRootGeom(void *p) {
      typedef ::WCSimRootGeom current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootGeom

//______________________________________________________________________________
void WCSimRootPMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimRootPMT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimRootPMT::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimRootPMT::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimRootPMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimRootPMT.
      TClass *R__cl = ::WCSimRootPMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTubeNo", &fTubeNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCylLoc", &fCylLoc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrientation[3]", fOrientation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition[3]", fPosition);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimRootPMT(void *p) {
      return  p ? new(p) ::WCSimRootPMT : new ::WCSimRootPMT;
   }
   static void *newArray_WCSimRootPMT(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimRootPMT[nElements] : new ::WCSimRootPMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimRootPMT(void *p) {
      delete ((::WCSimRootPMT*)p);
   }
   static void deleteArray_WCSimRootPMT(void *p) {
      delete [] ((::WCSimRootPMT*)p);
   }
   static void destruct_WCSimRootPMT(void *p) {
      typedef ::WCSimRootPMT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimRootPMT

//______________________________________________________________________________
void WCSimPmtInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCSimPmtInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCSimPmtInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCSimPmtInfo::Class(),this);
   }
}

//______________________________________________________________________________
void WCSimPmtInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCSimPmtInfo.
      TClass *R__cl = ::WCSimPmtInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cylocation", &cylocation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trans_x", &trans_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trans_y", &trans_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trans_z", &trans_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orien_x", &orien_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orien_y", &orien_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orien_z", &orien_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tube", &tube);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCSimPmtInfo(void *p) {
      return  p ? new(p) ::WCSimPmtInfo : new ::WCSimPmtInfo;
   }
   static void *newArray_WCSimPmtInfo(Long_t nElements, void *p) {
      return p ? new(p) ::WCSimPmtInfo[nElements] : new ::WCSimPmtInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCSimPmtInfo(void *p) {
      delete ((::WCSimPmtInfo*)p);
   }
   static void deleteArray_WCSimPmtInfo(void *p) {
      delete [] ((::WCSimPmtInfo*)p);
   }
   static void destruct_WCSimPmtInfo(void *p) {
      typedef ::WCSimPmtInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCSimPmtInfo

/********************************************************
* ./src/WCSimRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableWCSimRootDict();

extern "C" void G__set_cpp_environmentWCSimRootDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("WCSimRootEvent.hh");
  G__add_compiledheader("WCSimRootGeom.hh");
  G__add_compiledheader("WCSimPmtInfo.hh");
  G__cpp_reset_tagtableWCSimRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevWCSimRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* WCSimRootTrack */
static int G__WCSimRootDict_180_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootTrack[n];
     } else {
       p = new((void*) gvp) WCSimRootTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootTrack;
     } else {
       p = new((void*) gvp) WCSimRootTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 14
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRootTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t*) G__int(libp->para[7])
, (Float_t*) G__int(libp->para[8]), (Float_t*) G__int(libp->para[9])
, (Float_t*) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Float_t) G__double(libp->para[12]), (Int_t) G__int(libp->para[13]));
   } else {
     p = new((void*) gvp) WCSimRootTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t*) G__int(libp->para[7])
, (Float_t*) G__int(libp->para[8]), (Float_t*) G__int(libp->para[9])
, (Float_t*) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Float_t) G__double(libp->para[12]), (Int_t) G__int(libp->para[13]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrack*) G__getstructoffset())->GetIpnu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrack*) G__getstructoffset())->GetFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootTrack*) G__getstructoffset())->GetM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootTrack*) G__getstructoffset())->GetP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootTrack*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRootTrack*) G__getstructoffset())->GetStartvol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRootTrack*) G__getstructoffset())->GetStopvol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetDir((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetDir());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetPdir((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetPdir());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetStop((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetStop());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetStart((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetStart());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((WCSimRootTrack*) G__getstructoffset())->GetParenttype((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((WCSimRootTrack*) G__getstructoffset())->GetParenttype());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WCSimRootTrack*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRootTrack*) G__getstructoffset())->GetId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_180_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_180_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootTrack(*(WCSimRootTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootTrack G__TWCSimRootTrack;
static int G__WCSimRootDict_180_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootTrack*) (soff+(sizeof(WCSimRootTrack)*i)))->~G__TWCSimRootTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootTrack*) (soff))->~G__TWCSimRootTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_180_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootTrack* dest = (WCSimRootTrack*) G__getstructoffset();
   *dest = *(WCSimRootTrack*) libp->para[0].ref;
   const WCSimRootTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootCherenkovHit */
static int G__WCSimRootDict_181_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootCherenkovHit[n];
     } else {
       p = new((void*) gvp) WCSimRootCherenkovHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootCherenkovHit;
     } else {
       p = new((void*) gvp) WCSimRootCherenkovHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRootCherenkovHit((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCSimRootCherenkovHit((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootCherenkovHit*) G__getstructoffset())->GetTubeID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootCherenkovHit*) G__getstructoffset())->GetTotalPe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootCherenkovHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootCherenkovHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootCherenkovHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootCherenkovHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootCherenkovHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_181_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootCherenkovHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_181_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootCherenkovHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootCherenkovHit(*(WCSimRootCherenkovHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootCherenkovHit G__TWCSimRootCherenkovHit;
static int G__WCSimRootDict_181_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootCherenkovHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootCherenkovHit*) (soff+(sizeof(WCSimRootCherenkovHit)*i)))->~G__TWCSimRootCherenkovHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootCherenkovHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootCherenkovHit*) (soff))->~G__TWCSimRootCherenkovHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_181_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovHit* dest = (WCSimRootCherenkovHit*) G__getstructoffset();
   *dest = *(WCSimRootCherenkovHit*) libp->para[0].ref;
   const WCSimRootCherenkovHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootCherenkovHitTime */
static int G__WCSimRootDict_182_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovHitTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootCherenkovHitTime[n];
     } else {
       p = new((void*) gvp) WCSimRootCherenkovHitTime[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootCherenkovHitTime;
     } else {
       p = new((void*) gvp) WCSimRootCherenkovHitTime;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovHitTime* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRootCherenkovHitTime((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCSimRootCherenkovHitTime((Float_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WCSimRootCherenkovHitTime*) G__getstructoffset())->GetTruetime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRootCherenkovHitTime*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootCherenkovHitTime::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovHitTime::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootCherenkovHitTime::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootCherenkovHitTime::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootCherenkovHitTime*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovHitTime::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootCherenkovHitTime::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovHitTime::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootCherenkovHitTime::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_182_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootCherenkovHitTime* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootCherenkovHitTime(*(WCSimRootCherenkovHitTime*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootCherenkovHitTime G__TWCSimRootCherenkovHitTime;
static int G__WCSimRootDict_182_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootCherenkovHitTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootCherenkovHitTime*) (soff+(sizeof(WCSimRootCherenkovHitTime)*i)))->~G__TWCSimRootCherenkovHitTime();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootCherenkovHitTime*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootCherenkovHitTime*) (soff))->~G__TWCSimRootCherenkovHitTime();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_182_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovHitTime* dest = (WCSimRootCherenkovHitTime*) G__getstructoffset();
   *dest = *(WCSimRootCherenkovHitTime*) libp->para[0].ref;
   const WCSimRootCherenkovHitTime& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootCherenkovDigiHit */
static int G__WCSimRootDict_183_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovDigiHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootCherenkovDigiHit[n];
     } else {
       p = new((void*) gvp) WCSimRootCherenkovDigiHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootCherenkovDigiHit;
     } else {
       p = new((void*) gvp) WCSimRootCherenkovDigiHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovDigiHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRootCherenkovDigiHit(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) WCSimRootCherenkovDigiHit(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootCherenkovDigiHit*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootCherenkovDigiHit*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootCherenkovDigiHit*) G__getstructoffset())->GetTubeId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootCherenkovDigiHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovDigiHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootCherenkovDigiHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootCherenkovDigiHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootCherenkovDigiHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovDigiHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootCherenkovDigiHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootCherenkovDigiHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootCherenkovDigiHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootCherenkovDigiHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootCherenkovDigiHit(*(WCSimRootCherenkovDigiHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootCherenkovDigiHit G__TWCSimRootCherenkovDigiHit;
static int G__WCSimRootDict_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootCherenkovDigiHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootCherenkovDigiHit*) (soff+(sizeof(WCSimRootCherenkovDigiHit)*i)))->~G__TWCSimRootCherenkovDigiHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootCherenkovDigiHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootCherenkovDigiHit*) (soff))->~G__TWCSimRootCherenkovDigiHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_183_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootCherenkovDigiHit* dest = (WCSimRootCherenkovDigiHit*) G__getstructoffset();
   *dest = *(WCSimRootCherenkovDigiHit*) libp->para[0].ref;
   const WCSimRootCherenkovDigiHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootEventHeader */
static int G__WCSimRootDict_184_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootEventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootEventHeader[n];
     } else {
       p = new((void*) gvp) WCSimRootEventHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootEventHeader;
     } else {
       p = new((void*) gvp) WCSimRootEventHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((WCSimRootEventHeader*) G__getstructoffset())->Set((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((WCSimRootEventHeader*) G__getstructoffset())->Set((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEventHeader*) G__getstructoffset())->SetDate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootEventHeader*) G__getstructoffset())->GetEvtNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootEventHeader*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootEventHeader*) G__getstructoffset())->GetDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootEventHeader*) G__getstructoffset())->GetSubEvtNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootEventHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootEventHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootEventHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootEventHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WCSimRootEventHeader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEventHeader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEventHeader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEventHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootEventHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootEventHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootEventHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootEventHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_184_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootEventHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootEventHeader(*(WCSimRootEventHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootEventHeader G__TWCSimRootEventHeader;
static int G__WCSimRootDict_184_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootEventHeader*) (soff+(sizeof(WCSimRootEventHeader)*i)))->~G__TWCSimRootEventHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootEventHeader*) (soff))->~G__TWCSimRootEventHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_184_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootEventHeader* dest = (WCSimRootEventHeader*) G__getstructoffset();
   *dest = *(WCSimRootEventHeader*) libp->para[0].ref;
   const WCSimRootEventHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootPi0 */
static int G__WCSimRootDict_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootPi0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootPi0[n];
     } else {
       p = new((void*) gvp) WCSimRootPi0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootPi0;
     } else {
       p = new((void*) gvp) WCSimRootPi0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp3 { Float_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
      ((WCSimRootPi0*) G__getstructoffset())->Set((Float_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), G__Ap3->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootPi0*) G__getstructoffset())->GetPi0Vtx((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootPi0*) G__getstructoffset())->GetGammaID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootPi0*) G__getstructoffset())->GetGammaE((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootPi0*) G__getstructoffset())->GetGammaVtx((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootPi0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootPi0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootPi0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootPi0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootPi0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootPi0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootPi0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootPi0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootPi0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootPi0* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootPi0(*(WCSimRootPi0*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootPi0 G__TWCSimRootPi0;
static int G__WCSimRootDict_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootPi0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootPi0*) (soff+(sizeof(WCSimRootPi0)*i)))->~G__TWCSimRootPi0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootPi0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootPi0*) (soff))->~G__TWCSimRootPi0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_185_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootPi0* dest = (WCSimRootPi0*) G__getstructoffset();
   *dest = *(WCSimRootPi0*) libp->para[0].ref;
   const WCSimRootPi0& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootTrigger */
static int G__WCSimRootDict_186_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootTrigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootTrigger[n];
     } else {
       p = new((void*) gvp) WCSimRootTrigger[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootTrigger;
     } else {
       p = new((void*) gvp) WCSimRootTrigger;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootTrigger* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRootTrigger((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) WCSimRootTrigger((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimRootTrigger::Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimRootTrigger::Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((WCSimRootTrigger*) G__getstructoffset())->SetHeader((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((WCSimRootTrigger*) G__getstructoffset())->SetHeader((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRootTrigger*) G__getstructoffset())->IsASubEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetVtxvol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetVtx((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetVecRecNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetJmu((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetJp((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetNpar((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetNumTubesHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetSumQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->SetNumDigitizedTubes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp3 { Float_t a[1][3]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
      ((WCSimRootTrigger*) G__getstructoffset())->SetPi0Info((Float_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), G__Ap3->a);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRootTrigger*) G__getstructoffset())->GetHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRootTrigger*) G__getstructoffset())->GetPi0Info());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetVtxvol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootTrigger*) G__getstructoffset())->GetVtx((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootTrigger*) G__getstructoffset())->GetVtx());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetVecRecNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetJmu());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetJp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetNpar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetNumTubesHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetNumDigiTubesHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetNtrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetNcherenkovhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetNcherenkovdigihits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootTrigger*) G__getstructoffset())->GetSumQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRootTrigger*) G__getstructoffset())->AddTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t*) G__int(libp->para[7])
, (Float_t*) G__int(libp->para[8]), (Float_t*) G__int(libp->para[9])
, (Float_t*) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, (Float_t) G__double(libp->para[12]), (Int_t) G__int(libp->para[13])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRootTrigger*) G__getstructoffset())->AddCherenkovHit((Int_t) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1]))
, *((vector<Int_t>*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetCherenkovHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetCherenkovHitTimes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRootTrigger*) G__getstructoffset())->AddCherenkovDigiHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const WCSimRootTrigger*) G__getstructoffset())->GetCherenkovDigiHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootTrigger::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootTrigger::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootTrigger::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootTrigger::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootTrigger*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootTrigger::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootTrigger::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootTrigger::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_186_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootTrigger::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_186_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootTrigger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootTrigger(*(WCSimRootTrigger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootTrigger G__TWCSimRootTrigger;
static int G__WCSimRootDict_186_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootTrigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootTrigger*) (soff+(sizeof(WCSimRootTrigger)*i)))->~G__TWCSimRootTrigger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootTrigger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootTrigger*) (soff))->~G__TWCSimRootTrigger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_186_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootTrigger* dest = (WCSimRootTrigger*) G__getstructoffset();
   *dest = *(WCSimRootTrigger*) libp->para[0].ref;
   const WCSimRootTrigger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootEvent */
static int G__WCSimRootDict_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootEvent[n];
     } else {
       p = new((void*) gvp) WCSimRootEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootEvent;
     } else {
       p = new((void*) gvp) WCSimRootEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      WCSimRootEvent::Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      WCSimRootEvent::Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRootEvent*) G__getstructoffset())->GetCurrentIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((WCSimRootEvent*) G__getstructoffset())->GetTrigger((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootEvent*) G__getstructoffset())->GetNumberOfEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootEvent*) G__getstructoffset())->GetNumberOfSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((WCSimRootEvent*) G__getstructoffset())->HasSubEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEvent*) G__getstructoffset())->AddSubEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEvent*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEvent*) G__getstructoffset())->ReInitialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootEvent(*(WCSimRootEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootEvent G__TWCSimRootEvent;
static int G__WCSimRootDict_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootEvent*) (soff+(sizeof(WCSimRootEvent)*i)))->~G__TWCSimRootEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootEvent*) (soff))->~G__TWCSimRootEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootEvent* dest = (WCSimRootEvent*) G__getstructoffset();
   *dest = *(WCSimRootEvent*) libp->para[0].ref;
   const WCSimRootEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootPMT */
static int G__WCSimRootDict_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootPMT[n];
     } else {
       p = new((void*) gvp) WCSimRootPMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootPMT;
     } else {
       p = new((void*) gvp) WCSimRootPMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimRootPMT(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) WCSimRootPMT(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootPMT*) G__getstructoffset())->SetTubeNo((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootPMT*) G__getstructoffset())->SetCylLoc((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootPMT*) G__getstructoffset())->SetOrientation((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootPMT*) G__getstructoffset())->SetPosition((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootPMT*) G__getstructoffset())->GetTubeNo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootPMT*) G__getstructoffset())->GetCylLoc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootPMT*) G__getstructoffset())->GetOrientation((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootPMT*) G__getstructoffset())->GetOrientation());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((WCSimRootPMT*) G__getstructoffset())->GetPosition((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((WCSimRootPMT*) G__getstructoffset())->GetPosition());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootPMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootPMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootPMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootPMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootPMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootPMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootPMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootPMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootPMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootPMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootPMT(*(WCSimRootPMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootPMT G__TWCSimRootPMT;
static int G__WCSimRootDict_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootPMT*) (soff+(sizeof(WCSimRootPMT)*i)))->~G__TWCSimRootPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootPMT*) (soff))->~G__TWCSimRootPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootPMT* dest = (WCSimRootPMT*) G__getstructoffset();
   *dest = *(WCSimRootPMT*) libp->para[0].ref;
   const WCSimRootPMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimRootGeom */
static int G__WCSimRootDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootGeom* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootGeom[n];
     } else {
       p = new((void*) gvp) WCSimRootGeom[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimRootGeom;
     } else {
       p = new((void*) gvp) WCSimRootGeom;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetWCCylRadius((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetWCCylLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetGeo_Type((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetWCNumPMT((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetWCPMTRadius((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetWCOffset((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((WCSimRootGeom*) G__getstructoffset())->SetPMT((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3])
, (Float_t*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((WCSimRootGeom*) G__getstructoffset())->SetPMT((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3])
, (Float_t*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->SetOrientation((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootGeom*) G__getstructoffset())->GetWCCylRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootGeom*) G__getstructoffset())->GetWCCylLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootGeom*) G__getstructoffset())->GetGeo_Type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const WCSimRootGeom*) G__getstructoffset())->GetWCNumPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootGeom*) G__getstructoffset())->GetWCPMTRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const WCSimRootGeom*) G__getstructoffset())->GetWCOffset((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimRootGeom*) G__getstructoffset())->GetOrientation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         WCSimRootPMT* pobj;
         WCSimRootPMT xobj = ((WCSimRootGeom*) G__getstructoffset())->GetPMT((Int_t) G__int(libp->para[0]));
         pobj = new WCSimRootPMT(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimRootGeom::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootGeom::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimRootGeom::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimRootGeom::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimRootGeom*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootGeom::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootGeom::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimRootGeom::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimRootGeom::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimRootGeom* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimRootGeom(*(WCSimRootGeom*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimRootGeom G__TWCSimRootGeom;
static int G__WCSimRootDict_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimRootGeom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimRootGeom*) (soff+(sizeof(WCSimRootGeom)*i)))->~G__TWCSimRootGeom();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimRootGeom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimRootGeom*) (soff))->~G__TWCSimRootGeom();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimRootGeom* dest = (WCSimRootGeom*) G__getstructoffset();
   *dest = *(WCSimRootGeom*) libp->para[0].ref;
   const WCSimRootGeom& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCSimPmtInfo */
static int G__WCSimRootDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimPmtInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimPmtInfo[n];
     } else {
       p = new((void*) gvp) WCSimPmtInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCSimPmtInfo;
     } else {
       p = new((void*) gvp) WCSimPmtInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimPmtInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCSimPmtInfo(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
   } else {
     p = new((void*) gvp) WCSimPmtInfo(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimPmtInfo*) G__getstructoffset())->Get_cylocation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimPmtInfo*) G__getstructoffset())->Get_transx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimPmtInfo*) G__getstructoffset())->Get_transy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimPmtInfo*) G__getstructoffset())->Get_transz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimPmtInfo*) G__getstructoffset())->Get_orienx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimPmtInfo*) G__getstructoffset())->Get_orieny());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((WCSimPmtInfo*) G__getstructoffset())->Get_orienz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((WCSimPmtInfo*) G__getstructoffset())->Get_tubeid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCSimPmtInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimPmtInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCSimPmtInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCSimPmtInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCSimPmtInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimPmtInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimPmtInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCSimPmtInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__WCSimRootDict_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCSimPmtInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__WCSimRootDict_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCSimPmtInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCSimPmtInfo(*(WCSimPmtInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCSimPmtInfo G__TWCSimPmtInfo;
static int G__WCSimRootDict_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCSimPmtInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCSimPmtInfo*) (soff+(sizeof(WCSimPmtInfo)*i)))->~G__TWCSimPmtInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCSimPmtInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCSimPmtInfo*) (soff))->~G__TWCSimPmtInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__WCSimRootDict_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCSimPmtInfo* dest = (WCSimPmtInfo*) G__getstructoffset();
   *dest = *(WCSimPmtInfo*) libp->para[0].ref;
   const WCSimPmtInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* WCSimRootTrack */

/* WCSimRootCherenkovHit */

/* WCSimRootCherenkovHitTime */

/* WCSimRootCherenkovDigiHit */

/* WCSimRootEventHeader */

/* WCSimRootPi0 */

/* WCSimRootTrigger */

/* WCSimRootEvent */

/* WCSimRootPMT */

/* WCSimRootGeom */

/* WCSimPmtInfo */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncWCSimRootDict {
 public:
  G__Sizep2memfuncWCSimRootDict(): p(&G__Sizep2memfuncWCSimRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncWCSimRootDict::*p)();
};

size_t G__get_sizep2memfuncWCSimRootDict()
{
  G__Sizep2memfuncWCSimRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceWCSimRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack))) {
     WCSimRootTrack *G__Lderived;
     G__Lderived=(WCSimRootTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit))) {
     WCSimRootCherenkovHit *G__Lderived;
     G__Lderived=(WCSimRootCherenkovHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime))) {
     WCSimRootCherenkovHitTime *G__Lderived;
     G__Lderived=(WCSimRootCherenkovHitTime*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit))) {
     WCSimRootCherenkovDigiHit *G__Lderived;
     G__Lderived=(WCSimRootCherenkovDigiHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0))) {
     WCSimRootPi0 *G__Lderived;
     G__Lderived=(WCSimRootPi0*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger))) {
     WCSimRootTrigger *G__Lderived;
     G__Lderived=(WCSimRootTrigger*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent))) {
     WCSimRootEvent *G__Lderived;
     G__Lderived=(WCSimRootEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT))) {
     WCSimRootPMT *G__Lderived;
     G__Lderived=(WCSimRootPMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom))) {
     WCSimRootGeom *G__Lderived;
     G__Lderived=(WCSimRootGeom*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo))) {
     WCSimPmtInfo *G__Lderived;
     G__Lderived=(WCSimPmtInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo),G__get_linked_tagnum(&G__WCSimRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableWCSimRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* WCSimRootTrack */
static void G__setup_memvarWCSimRootTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack));
   { WCSimRootTrack *p; p=(WCSimRootTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIpnu=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fM=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStartvol=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStopvol=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDir[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPdir[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fStop[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fStart[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fParenttype=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootCherenkovHit */
static void G__setup_memvarWCSimRootCherenkovHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit));
   { WCSimRootCherenkovHit *p; p=(WCSimRootCherenkovHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTubeID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTotalPe[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootCherenkovHitTime */
static void G__setup_memvarWCSimRootCherenkovHitTime(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime));
   { WCSimRootCherenkovHitTime *p; p=(WCSimRootCherenkovHitTime*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTruetime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPrimaryParentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootCherenkovDigiHit */
static void G__setup_memvarWCSimRootCherenkovDigiHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit));
   { WCSimRootCherenkovDigiHit *p; p=(WCSimRootCherenkovDigiHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTubeId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootEventHeader */
static void G__setup_memvarWCSimRootEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader));
   { WCSimRootEventHeader *p; p=(WCSimRootEventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEvtNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fDate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubEvtNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootPi0 */
static void G__setup_memvarWCSimRootPi0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0));
   { WCSimRootPi0 *p; p=(WCSimRootPi0*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPi0Vtx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fGammaID[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fGammaE[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fGammaVtx[2][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootTrigger */
static void G__setup_memvarWCSimRootTrigger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger));
   { WCSimRootTrigger *p; p=(WCSimRootTrigger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader),-1,-1,4,"fEvtHdr=",0,"The header");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVtxvol=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fVtx[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVecRecNumber=",0,"\"info event\" number in inputvectorfile ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fJmu=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fJp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0),-1,-1,4,"fPi0=",0,"Pi0 info (default = not used)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpar=",0,"Number of particles");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNtrack=",0,"Number of tracks in the array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray),-1,-1,4,"fTracks=",0,"-> Array of WCSimRootTracks ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumTubesHit=",0,"Number of tubes hit");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcherenkovhits=",0,"Number of hits in the array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray),-1,-1,4,"fCherenkovHits=",0,"-> Array of WCSimRootCherenkovHits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCherenkovHitCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcherenkovhittimes=",0,"Number of hits in the array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray),-1,-1,4,"fCherenkovHitTimes=",0,"-> Array of WCSimRootCherenkovHits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumDigitizedTubes=",0,"Number of digitized tubes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNcherenkovdigihits=",0,"Number of digihits in the array");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fSumQ=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray),-1,-1,4,"fCherenkovDigiHits=",0,"-> Array of WCSimRootCherenkovDigiHit's");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"IsZombie=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootEvent */
static void G__setup_memvarWCSimRootEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent));
   { WCSimRootEvent *p; p=(WCSimRootEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TObjArray),-1,-1,4,"fEventList=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Current=",0,"!               means transient, not writable to file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootPMT */
static void G__setup_memvarWCSimRootPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT));
   { WCSimRootPMT *p; p=(WCSimRootPMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTubeNo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCylLoc=",0,"endcap1, wall, endcap2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fOrientation[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPosition[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimRootGeom */
static void G__setup_memvarWCSimRootGeom(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom));
   { WCSimRootGeom *p; p=(WCSimRootGeom*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"maxNumPMT=40000LL",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWCCylRadius=",0,"Radius of WC tank");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWCCylLength=",0,"Length of WC tank");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fgeo_type=",0,"mailbox or cylinder?");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWCPMTRadius=",0,"Radius of PMT");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWCNumPMT=",0,"Number of PMTs");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWCOffset[3]=",0,"Offset of barrel center in global coords");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fOrientation=",0,"Orientation o detector, 0 is 2km horizontal, 1 is Upright");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray),-1,-1,4,"fPMTArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCSimPmtInfo */
static void G__setup_memvarWCSimPmtInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo));
   { WCSimPmtInfo *p; p=(WCSimPmtInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"cylocation=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"trans_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"trans_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"trans_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"orien_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"orien_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"orien_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"tube=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__WCSimRootDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarWCSimRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncWCSimRootTrack(void) {
   /* WCSimRootTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack));
   G__memfunc_setup("WCSimRootTrack",1372,G__WCSimRootDict_180_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRootTrack",1372,G__WCSimRootDict_180_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack), -1, 0, 14, 1, 1, 0, 
"i - 'Int_t' 0 - ipnu i - 'Int_t' 0 - flag "
"f - 'Float_t' 0 - m f - 'Float_t' 0 - p "
"f - 'Float_t' 0 - E i - 'Int_t' 0 - startvol "
"i - 'Int_t' 0 - stopvol F - 'Float_t' 0 - dir "
"F - 'Float_t' 0 - pdir F - 'Float_t' 0 - stop "
"F - 'Float_t' 0 - start i - 'Int_t' 0 - parenttype "
"f - 'Float_t' 0 - time i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIpnu",700,G__WCSimRootDict_180_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlag",666,G__WCSimRootDict_180_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetM",365,G__WCSimRootDict_180_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__WCSimRootDict_180_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__WCSimRootDict_180_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartvol",1151,G__WCSimRootDict_180_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStopvol",1047,G__WCSimRootDict_180_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDir",575,G__WCSimRootDict_180_0_10, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdir",687,G__WCSimRootDict_180_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStop",710,G__WCSimRootDict_180_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStart",814,G__WCSimRootDict_180_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParenttype",1356,G__WCSimRootDict_180_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__WCSimRootDict_180_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetId",461,G__WCSimRootDict_180_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_180_0_17, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_180_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_180_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_180_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_180_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_180_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_180_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_180_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_180_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootTrack", 1372, G__WCSimRootDict_180_0_29, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack), -1, 0, 1, 1, 1, 0, "u 'WCSimRootTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootTrack", 1498, G__WCSimRootDict_180_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_180_0_31, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack), -1, 1, 1, 1, 1, 0, "u 'WCSimRootTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootCherenkovHit(void) {
   /* WCSimRootCherenkovHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit));
   G__memfunc_setup("WCSimRootCherenkovHit",2097,G__WCSimRootDict_181_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRootCherenkovHit",2097,G__WCSimRootDict_181_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - tubeID I - 'Int_t' 0 - totalPe", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTubeID",829,G__WCSimRootDict_181_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalPe",985,G__WCSimRootDict_181_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_181_0_5, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootCherenkovHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_181_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_181_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootCherenkovHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_181_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootCherenkovHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_181_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_181_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_181_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootCherenkovHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_181_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_181_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootCherenkovHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootCherenkovHit", 2097, G__WCSimRootDict_181_0_17, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit), -1, 0, 1, 1, 1, 0, "u 'WCSimRootCherenkovHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootCherenkovHit", 2223, G__WCSimRootDict_181_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_181_0_19, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit), -1, 1, 1, 1, 1, 0, "u 'WCSimRootCherenkovHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootCherenkovHitTime(void) {
   /* WCSimRootCherenkovHitTime */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime));
   G__memfunc_setup("WCSimRootCherenkovHitTime",2496,G__WCSimRootDict_182_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRootCherenkovHitTime",2496,G__WCSimRootDict_182_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime), -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - truetime i - 'Int_t' 0 - primaryParentID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTruetime",1135,G__WCSimRootDict_182_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParentID",1047,G__WCSimRootDict_182_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_182_0_5, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootCherenkovHitTime::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_182_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovHitTime::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_182_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootCherenkovHitTime::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_182_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootCherenkovHitTime::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_182_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_182_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovHitTime::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_182_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootCherenkovHitTime::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_182_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovHitTime::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_182_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootCherenkovHitTime::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootCherenkovHitTime", 2496, G__WCSimRootDict_182_0_17, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime), -1, 0, 1, 1, 1, 0, "u 'WCSimRootCherenkovHitTime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootCherenkovHitTime", 2622, G__WCSimRootDict_182_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_182_0_19, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime), -1, 1, 1, 1, 1, 0, "u 'WCSimRootCherenkovHitTime' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootCherenkovDigiHit(void) {
   /* WCSimRootCherenkovDigiHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit));
   G__memfunc_setup("WCSimRootCherenkovDigiHit",2478,G__WCSimRootDict_183_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRootCherenkovDigiHit",2478,G__WCSimRootDict_183_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit), -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - q f - 'Float_t' 0 - t "
"i - 'Int_t' 0 - tubeid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__WCSimRootDict_183_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__WCSimRootDict_183_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTubeId",861,G__WCSimRootDict_183_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_183_0_6, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootCherenkovDigiHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_183_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovDigiHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_183_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootCherenkovDigiHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_183_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootCherenkovDigiHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_183_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_183_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovDigiHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_183_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootCherenkovDigiHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_183_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootCherenkovDigiHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_183_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootCherenkovDigiHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootCherenkovDigiHit", 2478, G__WCSimRootDict_183_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit), -1, 0, 1, 1, 1, 0, "u 'WCSimRootCherenkovDigiHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootCherenkovDigiHit", 2604, G__WCSimRootDict_183_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_183_0_20, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit), -1, 1, 1, 1, 1, 0, "u 'WCSimRootCherenkovDigiHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootEventHeader(void) {
   /* WCSimRootEventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader));
   G__memfunc_setup("WCSimRootEventHeader",1970,G__WCSimRootDict_184_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__WCSimRootDict_184_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - r "
"i - 'Int_t' 0 - d i - 'Int_t' 0 '1' s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDate",682,G__WCSimRootDict_184_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvtNum",895,G__WCSimRootDict_184_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__WCSimRootDict_184_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDate",670,G__WCSimRootDict_184_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubEvtNumber",1506,G__WCSimRootDict_184_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_184_0_8, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootEventHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_184_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootEventHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_184_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootEventHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_184_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootEventHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__WCSimRootDict_184_0_12, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__WCSimRootDict_184_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__WCSimRootDict_184_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_184_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_184_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootEventHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_184_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootEventHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_184_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootEventHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_184_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootEventHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootEventHeader", 1970, G__WCSimRootDict_184_0_20, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader), -1, 0, 1, 1, 1, 0, "u 'WCSimRootEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootEventHeader", 2096, G__WCSimRootDict_184_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_184_0_22, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader), -1, 1, 1, 1, 1, 0, "u 'WCSimRootEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootPi0(void) {
   /* WCSimRootPi0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0));
   G__memfunc_setup("WCSimRootPi0",1104,G__WCSimRootDict_185_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__WCSimRootDict_185_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"F - 'Float_t' 0 - pi0Vtx I - 'Int_t' 0 - gammaID "
"F - 'Float_t' 0 - gammaE F - 'Float_t' 2 - gammaVtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Vtx",843,G__WCSimRootDict_185_0_3, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaID",912,G__WCSimRootDict_185_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaE",840,G__WCSimRootDict_185_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGammaVtx",1093,G__WCSimRootDict_185_0_6, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_185_0_7, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootPi0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_185_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootPi0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_185_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootPi0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_185_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootPi0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_185_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_185_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootPi0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_185_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootPi0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_185_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootPi0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_185_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootPi0::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootPi0", 1104, G__WCSimRootDict_185_0_19, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0), -1, 0, 1, 1, 1, 0, "u 'WCSimRootPi0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootPi0", 1230, G__WCSimRootDict_185_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_185_0_21, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0), -1, 1, 1, 1, 1, 0, "u 'WCSimRootPi0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootTrigger(void) {
   /* WCSimRootTrigger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger));
   G__memfunc_setup("WCSimRootTrigger",1595,G__WCSimRootDict_186_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRootTrigger",1595,G__WCSimRootDict_186_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger), -1, 0, 2, 1, 1, 0, 
"i - - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__WCSimRootDict_186_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__WCSimRootDict_186_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) G__func2void( (void (*)(Option_t*))(&WCSimRootTrigger::Reset) ), 0);
   G__memfunc_setup("SetHeader",885,G__WCSimRootDict_186_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - run "
"i - 'Int_t' 0 - date i - 'Int_t' 0 '1' subevtn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsASubEvent",1065,G__WCSimRootDict_186_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMode",689,G__WCSimRootDict_186_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtxvol",959,G__WCSimRootDict_186_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVtx",622,G__WCSimRootDict_186_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVecRecNumber",1485,G__WCSimRootDict_186_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJmu",600,G__WCSimRootDict_186_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetJp",486,G__WCSimRootDict_186_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNpar",701,G__WCSimRootDict_186_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumTubesHit",1412,G__WCSimRootDict_186_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSumQ",690,G__WCSimRootDict_186_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumDigitizedTubes",2044,G__WCSimRootDict_186_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPi0Info",929,G__WCSimRootDict_186_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"F - 'Float_t' 0 - pi0Vtx I - 'Int_t' 0 - gammaID "
"F - 'Float_t' 0 - gammaE F - 'Float_t' 2 - gammaVtx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeader",873,G__WCSimRootDict_186_0_19, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Info",917,G__WCSimRootDict_186_0_20, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPi0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMode",677,G__WCSimRootDict_186_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtxvol",947,G__WCSimRootDict_186_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVtx",610,G__WCSimRootDict_186_0_23, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVecRecNumber",1473,G__WCSimRootDict_186_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJmu",588,G__WCSimRootDict_186_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetJp",474,G__WCSimRootDict_186_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpar",689,G__WCSimRootDict_186_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTubesHit",1400,G__WCSimRootDict_186_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumDigiTubesHit",1781,G__WCSimRootDict_186_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtrack",899,G__WCSimRootDict_186_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNcherenkovhits",1771,G__WCSimRootDict_186_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNcherenkovdigihits",2184,G__WCSimRootDict_186_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSumQ",678,G__WCSimRootDict_186_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddTrack",766,G__WCSimRootDict_186_0_34, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrack), -1, 0, 14, 1, 1, 0, 
"i - 'Int_t' 0 - ipnu i - 'Int_t' 0 - flag "
"f - 'Float_t' 0 - m f - 'Float_t' 0 - p "
"f - 'Float_t' 0 - E i - 'Int_t' 0 - startvol "
"i - 'Int_t' 0 - stopvol F - 'Float_t' 0 - dir "
"F - 'Float_t' 0 - pdir F - 'Float_t' 0 - stop "
"F - 'Float_t' 0 - start i - 'Int_t' 0 - parenttype "
"f - 'Float_t' 0 - time i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTracks",904,G__WCSimRootDict_186_0_35, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCherenkovHit",1491,G__WCSimRootDict_186_0_36, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovHit), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - tubeID u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - truetime "
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - primParID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCherenkovHits",1629,G__WCSimRootDict_186_0_37, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCherenkovHitTimes",2028,G__WCSimRootDict_186_0_38, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCherenkovDigiHit",1872,G__WCSimRootDict_186_0_39, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit), -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - q f - 'Float_t' 0 - t "
"i - 'Int_t' 0 - tubeid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCherenkovDigiHits",2010,G__WCSimRootDict_186_0_40, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_186_0_41, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootTrigger::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_186_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootTrigger::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_186_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootTrigger::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_186_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootTrigger::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_186_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_186_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootTrigger::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_186_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootTrigger::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_186_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootTrigger::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_186_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootTrigger::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootTrigger", 1595, G__WCSimRootDict_186_0_53, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger), -1, 0, 1, 1, 1, 0, "u 'WCSimRootTrigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootTrigger", 1721, G__WCSimRootDict_186_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_186_0_55, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger), -1, 1, 1, 1, 1, 0, "u 'WCSimRootTrigger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootEvent(void) {
   /* WCSimRootEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent));
   G__memfunc_setup("WCSimRootEvent",1385,G__WCSimRootDict_191_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__WCSimRootDict_191_0_3, 121, -1, -1, 0, 1, 3, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) G__func2void( (void (*)(Option_t*))(&WCSimRootEvent::Reset) ), 0);
   G__memfunc_setup("GetCurrentIndex",1531,G__WCSimRootDict_191_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrigger",1012,G__WCSimRootDict_191_0_5, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootTrigger), -1, 0, 1, 1, 1, 0, "i - - 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfEvents",1715,G__WCSimRootDict_191_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfSubEvents",2013,G__WCSimRootDict_191_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HasSubEvents",1211,G__WCSimRootDict_191_0_8, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSubEvent",1077,G__WCSimRootDict_191_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__WCSimRootDict_191_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReInitialize",1225,G__WCSimRootDict_191_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_191_0_12, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_191_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_191_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_191_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_191_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_191_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_191_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_191_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_191_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootEvent", 1385, G__WCSimRootDict_191_0_24, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent), -1, 0, 1, 1, 1, 0, "u 'WCSimRootEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootEvent", 1511, G__WCSimRootDict_191_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_191_0_26, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootEvent), -1, 1, 1, 1, 1, 0, "u 'WCSimRootEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootPMT(void) {
   /* WCSimRootPMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT));
   G__memfunc_setup("WCSimRootPMT",1112,G__WCSimRootDict_192_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimRootPMT",1112,G__WCSimRootDict_192_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - tubeNo i - 'Int_t' 0 - cylLoc "
"F - 'Float_t' 0 - orientation F - 'Float_t' 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTubeNo",889,G__WCSimRootDict_192_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCylLoc",882,G__WCSimRootDict_192_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOrientation",1464,G__WCSimRootDict_192_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__WCSimRootDict_192_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTubeNo",877,G__WCSimRootDict_192_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCylLoc",870,G__WCSimRootDict_192_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrientation",1452,G__WCSimRootDict_192_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__WCSimRootDict_192_0_10, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_192_0_11, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootPMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_192_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootPMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_192_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootPMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_192_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootPMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_192_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_192_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootPMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_192_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootPMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_192_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootPMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_192_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootPMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootPMT", 1112, G__WCSimRootDict_192_0_23, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT), -1, 0, 1, 1, 1, 0, "u 'WCSimRootPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootPMT", 1238, G__WCSimRootDict_192_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_192_0_25, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT), -1, 1, 1, 1, 1, 0, "u 'WCSimRootPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimRootGeom(void) {
   /* WCSimRootGeom */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom));
   G__memfunc_setup("WCSimRootGeom",1263,G__WCSimRootDict_193_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCCylRadius",1366,G__WCSimRootDict_193_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCCylLength",1360,G__WCSimRootDict_193_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeo_Type",1096,G__WCSimRootDict_193_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCNumPMT",999,G__WCSimRootDict_193_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCPMTRadius",1311,G__WCSimRootDict_193_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCOffset",1069,G__WCSimRootDict_193_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPMT",541,G__WCSimRootDict_193_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - tubeno "
"i - 'Int_t' 0 - cyl_loc F - 'Float_t' 0 - rot "
"F - 'Float_t' 0 - pos g - - 0 'true' expand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOrientation",1464,G__WCSimRootDict_193_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCCylRadius",1354,G__WCSimRootDict_193_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCCylLength",1348,G__WCSimRootDict_193_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeo_Type",1084,G__WCSimRootDict_193_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCNumPMT",987,G__WCSimRootDict_193_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCPMTRadius",1299,G__WCSimRootDict_193_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCOffset",1057,G__WCSimRootDict_193_0_15, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrientation",1452,G__WCSimRootDict_193_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMT",529,G__WCSimRootDict_193_0_17, 117, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootPMT), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_193_0_18, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimRootGeom::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_193_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootGeom::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_193_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimRootGeom::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_193_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimRootGeom::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_193_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_193_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootGeom::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_193_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootGeom::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_193_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimRootGeom::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_193_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimRootGeom::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimRootGeom", 1263, G__WCSimRootDict_193_0_30, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom), -1, 0, 1, 1, 1, 0, "u 'WCSimRootGeom' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimRootGeom", 1389, G__WCSimRootDict_193_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_193_0_32, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimRootGeom), -1, 1, 1, 1, 1, 0, "u 'WCSimRootGeom' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCSimPmtInfo(void) {
   /* WCSimPmtInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo));
   G__memfunc_setup("WCSimPmtInfo",1152,G__WCSimRootDict_194_0_1, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCSimPmtInfo",1152,G__WCSimRootDict_194_0_2, 105, G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - i d - 'Double_t' 0 - t1 "
"d - 'Double_t' 0 - t2 d - 'Double_t' 0 - t3 "
"d - 'Double_t' 0 - o1 d - 'Double_t' 0 - o2 "
"d - 'Double_t' 0 - o3 i - 'Int_t' 0 - tubeid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_cylocation",1460,G__WCSimRootDict_194_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_transx",1055,G__WCSimRootDict_194_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_transy",1056,G__WCSimRootDict_194_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_transz",1057,G__WCSimRootDict_194_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_orienx",1044,G__WCSimRootDict_194_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_orieny",1045,G__WCSimRootDict_194_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_orienz",1046,G__WCSimRootDict_194_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get_tubeid",1020,G__WCSimRootDict_194_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__WCSimRootDict_194_0_11, 85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCSimPmtInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__WCSimRootDict_194_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimPmtInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__WCSimRootDict_194_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCSimPmtInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__WCSimRootDict_194_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCSimPmtInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__WCSimRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__WCSimRootDict_194_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__WCSimRootDict_194_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimPmtInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__WCSimRootDict_194_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimPmtInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__WCSimRootDict_194_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCSimPmtInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__WCSimRootDict_194_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCSimPmtInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("WCSimPmtInfo", 1152, G__WCSimRootDict_194_0_23, (int) ('i'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo), -1, 0, 1, 1, 1, 0, "u 'WCSimPmtInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCSimPmtInfo", 1278, G__WCSimRootDict_194_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__WCSimRootDict_194_0_25, (int) ('u'), G__get_linked_tagnum(&G__WCSimRootDictLN_WCSimPmtInfo), -1, 1, 1, 1, 1, 0, "u 'WCSimPmtInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncWCSimRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalWCSimRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcWCSimRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__WCSimRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootTrack = { "WCSimRootTrack" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootCherenkovHit = { "WCSimRootCherenkovHit" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootCherenkovHitTime = { "WCSimRootCherenkovHitTime" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootCherenkovDigiHit = { "WCSimRootCherenkovDigiHit" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootEventHeader = { "WCSimRootEventHeader" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootPi0 = { "WCSimRootPi0" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootTrigger = { "WCSimRootTrigger" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootEvent = { "WCSimRootEvent" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootPMT = { "WCSimRootPMT" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimRootGeom = { "WCSimRootGeom" , 99 , -1 };
G__linked_taginfo G__WCSimRootDictLN_WCSimPmtInfo = { "WCSimPmtInfo" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableWCSimRootDict() {
  G__WCSimRootDictLN_TClass.tagnum = -1 ;
  G__WCSimRootDictLN_TBuffer.tagnum = -1 ;
  G__WCSimRootDictLN_TMemberInspector.tagnum = -1 ;
  G__WCSimRootDictLN_TObject.tagnum = -1 ;
  G__WCSimRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__WCSimRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__WCSimRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimRootDictLN_TObjArray.tagnum = -1 ;
  G__WCSimRootDictLN_TClonesArray.tagnum = -1 ;
  G__WCSimRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__WCSimRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootTrack.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootCherenkovHit.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootCherenkovHitTime.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootCherenkovDigiHit.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootEventHeader.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootPi0.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootTrigger.tagnum = -1 ;
  G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__WCSimRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootEvent.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootPMT.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimRootGeom.tagnum = -1 ;
  G__WCSimRootDictLN_WCSimPmtInfo.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableWCSimRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootTrack),sizeof(WCSimRootTrack),-1,324864,(char*)NULL,G__setup_memvarWCSimRootTrack,G__setup_memfuncWCSimRootTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootCherenkovHit),sizeof(WCSimRootCherenkovHit),-1,324864,(char*)NULL,G__setup_memvarWCSimRootCherenkovHit,G__setup_memfuncWCSimRootCherenkovHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootCherenkovHitTime),sizeof(WCSimRootCherenkovHitTime),-1,324864,(char*)NULL,G__setup_memvarWCSimRootCherenkovHitTime,G__setup_memfuncWCSimRootCherenkovHitTime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootCherenkovDigiHit),sizeof(WCSimRootCherenkovDigiHit),-1,324864,(char*)NULL,G__setup_memvarWCSimRootCherenkovDigiHit,G__setup_memfuncWCSimRootCherenkovDigiHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootEventHeader),sizeof(WCSimRootEventHeader),-1,263424,"WCSimRootEvent Header",G__setup_memvarWCSimRootEventHeader,G__setup_memfuncWCSimRootEventHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootPi0),sizeof(WCSimRootPi0),-1,292096,(char*)NULL,G__setup_memvarWCSimRootPi0,G__setup_memfuncWCSimRootPi0);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootTrigger),sizeof(WCSimRootTrigger),-1,324864,"WCSimRootEvent structure",G__setup_memvarWCSimRootTrigger,G__setup_memfuncWCSimRootTrigger);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootEvent),sizeof(WCSimRootEvent),-1,292096,(char*)NULL,G__setup_memvarWCSimRootEvent,G__setup_memfuncWCSimRootEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootPMT),sizeof(WCSimRootPMT),-1,324864,"WCSimPMT structure",G__setup_memvarWCSimRootPMT,G__setup_memfuncWCSimRootPMT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimRootGeom),sizeof(WCSimRootGeom),-1,292096,"WCSimRootEvent structure",G__setup_memvarWCSimRootGeom,G__setup_memfuncWCSimRootGeom);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__WCSimRootDictLN_WCSimPmtInfo),sizeof(WCSimPmtInfo),-1,324864,(char*)NULL,G__setup_memvarWCSimPmtInfo,G__setup_memfuncWCSimPmtInfo);
}
extern "C" void G__cpp_setupWCSimRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupWCSimRootDict()");
  G__set_cpp_environmentWCSimRootDict();
  G__cpp_setup_tagtableWCSimRootDict();

  G__cpp_setup_inheritanceWCSimRootDict();

  G__cpp_setup_typetableWCSimRootDict();

  G__cpp_setup_memvarWCSimRootDict();

  G__cpp_setup_memfuncWCSimRootDict();
  G__cpp_setup_globalWCSimRootDict();
  G__cpp_setup_funcWCSimRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncWCSimRootDict();
  return;
}
class G__cpp_setup_initWCSimRootDict {
  public:
    G__cpp_setup_initWCSimRootDict() { G__add_setup_func("WCSimRootDict",(G__incsetup)(&G__cpp_setupWCSimRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initWCSimRootDict() { G__remove_setup_func("WCSimRootDict"); }
};
G__cpp_setup_initWCSimRootDict G__cpp_setup_initializerWCSimRootDict;

